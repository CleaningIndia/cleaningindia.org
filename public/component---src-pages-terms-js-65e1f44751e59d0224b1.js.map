{"version":3,"sources":["webpack:///./src/pages/terms.js","webpack:///./src/components/seo.js"],"names":["TermsPage","title","className","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps"],"mappings":"kRAAA,wDAmBeA,UAdG,kBACd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,iBACX,yBAAKC,UAAW,aACZ,yBAAKA,UAAW,WACZ,yBAAKA,UAAW,SACZ,kD,4FCCpB,SAASC,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAML,EAAS,EAATA,MAC9BM,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,IAAD,CACEM,eAAgB,CACdL,QAEFJ,MAAOA,EACPU,cAAa,QAAUJ,EAAKE,aAAaR,MACzCK,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASZ,GAEX,CACEa,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,YAEVE,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-terms-js-65e1f44751e59d0224b1.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst TermsPage = () => (\n    <Layout>\n        <SEO title=\"Terms Of Use\"/>\n        <div className={\"container\"}>\n            <div className={\"content\"}>\n                <div className={\"title\"}>\n                    <h1>Terms Of Use</h1>\n                </div>\n\n            </div>\n        </div>\n    </Layout>\n)\n\nexport default TermsPage\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        }\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}